(window.webpackJsonp=window.webpackJsonp||[]).push([[113],{1253:function(v,_,e){"use strict";e.r(_);var t=e(17),r=Object(t.a)({},function(){var v=this,_=v.$createElement,e=v._self._c||_;return e("ContentSlotsDistributor",{attrs:{"slot-key":v.$parent.slotKey}},[e("p",[v._v("由於網路上很多部署 .net core SPA 到 Heroku 的文章，因此")]),v._v(" "),e("p",[v._v("這邊不會贅述詳細流程，也不會分析使用 Heroku 的優劣")]),v._v(" "),e("p",[v._v("這篇文章主要想記錄的，是我部署的過程中遇到的一些小細節")]),v._v(" "),e("h1",{attrs:{id:"部署流程概述"}},[v._v("部署流程概述")]),v._v(" "),e("ol",[e("li",[e("p",[v._v("到 Heroku 上註冊帳號 (如果沒有帳號)")])]),v._v(" "),e("li",[e("p",[v._v("安裝 Heroku cli (如果沒有)")])]),v._v(" "),e("li",[e("p",[v._v("到 Heroku 上建立新的app")])]),v._v(" "),e("li",[e("p",[v._v("設定 buildpack")])]),v._v(" "),e("li",[e("p",[v._v("到 Heroku 上建立新的 Posgres DB")])]),v._v(" "),e("li",[e("p",[v._v("預先將 SPA 的部分 build 好並遷入 git")])]),v._v(" "),e("li",[e("p",[v._v("直接 git push heroku HEAD:master 觸發網頁部署")])]),v._v(" "),e("li",[e("p",[v._v("指定 Heroku app type")])])]),v._v(" "),e("h1",{attrs:{id:"設定-buildpack"}},[v._v("設定 buildpack")]),v._v(" "),e("p",[v._v("首先，Heroku好像是設計機制的關西吧，他有幾種部署模式")]),v._v(" "),e("p",[v._v("那如果要使用 "),e("code",[v._v("git push heroku HEAD:master")]),v._v(" 的方式部署")]),v._v(" "),e("p",[v._v("目前看來，似乎必定會觸發編譯的過程")]),v._v(" "),e("p",[v._v("也就是說，他不允許在這種部署模式下讓你直接上傳編譯好的檔案")]),v._v(" "),e("p",[v._v("而 .net core 預設不在官方支援的編譯類型當中")]),v._v(" "),e("p",[v._v("因此要使用到一位大大寫的編譯指令，"),e("a",{attrs:{href:"https://github.com/jincod/dotnetcore-buildpack",target:"_blank",rel:"noopener noreferrer"}},[v._v("dotnetcore-buildpack"),e("OutboundLink")],1)]),v._v(" "),e("p",[v._v("其實看一下他寫的指令，基本上就是一串 shell script，直接下載 .net core 在 linux 上的cli")]),v._v(" "),e("p",[v._v("然後用那個 cli 進行編譯，並寫好網站執行的指令等等等(裡面其實也是做了不少事)")]),v._v(" "),e("p",[v._v("而安裝buildpack，可以透過以下指令進行")]),v._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[v._v("heroku buildpacks:add https://github.com/jincod/dotnetcore-buildpack\n")])])]),e("p",[v._v("或直接到 heroku 的 dashboard 上，用 GUI 介面設定")]),v._v(" "),e("p",[v._v("那這邊還有一個issue，就是SPA編譯的部分")]),v._v(" "),e("p",[v._v("由於目前 Heroku 官方寫的編譯 buildpack(heroku/nodejs) 要求 "),e("code",[v._v("package.json")]),v._v(" 必須在根目錄上不能在子目錄")]),v._v(" "),e("p",[v._v("所以...，我看了一下相關的文章是說，這好像跟 Heroku 想要 cache node_modules 有關")]),v._v(" "),e("p",[v._v("但...簡單來說，要不放子目錄，不然就不要用 Heroku")]),v._v(" "),e("p",[v._v("或者，就暴力解吧，直接預先編譯好SPA的部分後遷入 git")]),v._v(" "),e("p",[v._v("我有嘗試想要使用子目錄編譯的東西，像是 "),e("a",{attrs:{href:"https://github.com/timanovsky/subdir-heroku-buildpack",target:"_blank",rel:"noopener noreferrer"}},[v._v("https://github.com/timanovsky/subdir-heroku-buildpack"),e("OutboundLink")],1)]),v._v(" "),e("p",[v._v("但這套件居然會在編譯好之後把其他東西清掉...Orz")]),v._v(" "),e("p",[v._v("還有的作法是說，用 git subtree 去指定路徑")]),v._v(" "),e("p",[v._v("好吧，對於我這個只是想上傳 demo 網站的人來說，我決定還是直接遷入好了 lol")]),v._v(" "),e("h1",{attrs:{id:"到-heroku-上建立新的-posgres-db"}},[v._v("到 Heroku 上建立新的 Posgres DB")]),v._v(" "),e("p",[v._v("再來是建立DB的部分，基本上就是把以下的欄位照著填，然後記得補上SSL相關的設定")]),v._v(" "),e("p",[v._v("如果照著填還發生DB連不到的問題，有很大機率不是連線字串的問題")]),v._v(" "),e("p",[v._v("可能是其他的設定，或者是套件版本的問題")]),v._v(" "),e("p",[v._v("要填的相關欄位有:")]),v._v(" "),e("table",[e("thead",[e("tr",[e("th",[v._v("欄位")]),v._v(" "),e("th",[v._v("用途")])])]),v._v(" "),e("tbody",[e("tr",[e("td",[v._v("User ID")]),v._v(" "),e("td",[v._v("DB 帳號")])]),v._v(" "),e("tr",[e("td",[v._v("Password")]),v._v(" "),e("td",[v._v("DB 密碼")])]),v._v(" "),e("tr",[e("td",[v._v("Server")]),v._v(" "),e("td",[v._v("DB 的位置")])]),v._v(" "),e("tr",[e("td",[v._v("Port")]),v._v(" "),e("td",[v._v("DB Port號(option)，預設為5432")])]),v._v(" "),e("tr",[e("td",[v._v("Database")]),v._v(" "),e("td",[v._v("DB 名稱")])]),v._v(" "),e("tr",[e("td",[v._v("Pooling")]),v._v(" "),e("td",[v._v("連線機制(option)")])]),v._v(" "),e("tr",[e("td",[v._v("SSL Mode")]),v._v(" "),e("td",[v._v("連線機制")])]),v._v(" "),e("tr",[e("td",[v._v("Trust Server Certificate")]),v._v(" "),e("td",[v._v("連線機制")])])])]),v._v(" "),e("p",[v._v("最終組出來的連線字串會像這樣")]),v._v(" "),e("p",[e("code",[v._v("User ID=<YOUR_ID>;Password=<YOUR_PWD>;Server=<YOUR_SERVER_IP>;Port=5432;Database=<YOUR_DB_NAME>;Pooling=true;SSL Mode=Require;Trust Server Certificate=true")])]),v._v(" "),e("h2",{attrs:{id:"設定連線字串"}},[v._v("設定連線字串")]),v._v(" "),e("p",[v._v("如果不希望DB的一些機敏資料遷入 git 中，也可以選擇讓程式去讀 Environment Variable")]),v._v(" "),e("p",[v._v("把連線字串寫在 env var 中，這樣就可以避免這個問題")]),v._v(" "),e("h1",{attrs:{id:"直接-git-push-heroku-head-master-觸發網頁部署"}},[v._v("直接 git push heroku HEAD:master 觸發網頁部署")]),v._v(" "),e("p",[v._v("首先要加入一個 remote")]),v._v(" "),e("p",[e("code",[v._v("heroku git:remote -a <YOUR_HEROKU_APP_NAME>")])]),v._v(" "),e("p",[v._v("再來，就是 push 到 heroku 上")]),v._v(" "),e("p",[v._v("簡稱指令是 "),e("code",[v._v("git push heroku master")])]),v._v(" "),e("p",[v._v("如果不行的話，就要用完整一點的指令 "),e("code",[v._v("git push heroku HEAD:master")])]),v._v(" "),e("p",[v._v("或者就要看你怎麼規畫你的 git 分支")]),v._v(" "),e("h1",{attrs:{id:"指定-heroku-app-type"}},[v._v("指定 Heroku app type")]),v._v(" "),e("p",[v._v("如果啟動網站後看不到網站，而是 error page")]),v._v(" "),e("p",[v._v("看 log 還有發現以下的字樣的話")]),v._v(" "),e("p",[e("code",[v._v('at=error code=H14 desc=”No web processes running” method=GET path=”/” host=xxx.herokuapp.com request_id=xxx fwd=”xxx.xx.xx.x" dyno= connect= service= status=503 bytes=')])]),v._v(" "),e("p",[v._v("那8成就是 Heroku 誤判了這個 "),e("code",[v._v("Heroku app")]),v._v(" 的類型")]),v._v(" "),e("p",[v._v("必須要手動下指令讓他知道這是一個網站")]),v._v(" "),e("p",[e("code",[v._v("heroku ps:scale web=1")])]),v._v(" "),e("h1",{attrs:{id:"觀看設定檔"}},[v._v("觀看設定檔")]),v._v(" "),e("p",[v._v("當部署完成後，如果想調整 "),e("code",[v._v("appSettings.json")]),v._v(" 或一些設定檔，可以登入上去調")]),v._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[v._v("heroku login "),e("span",{pre:!0,attrs:{class:"token comment"}},[v._v("# 先進行登入認證")]),v._v("\nheroku run "),e("span",{pre:!0,attrs:{class:"token function"}},[v._v("bash")]),v._v(" "),e("span",{pre:!0,attrs:{class:"token comment"}},[v._v("# 這樣就能進 server 用 linux 指令去進行操作了")]),v._v("\n")])])])])},[],!1,null,null,null);_.default=r.exports}}]);