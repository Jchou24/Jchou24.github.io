(window.webpackJsonp=window.webpackJsonp||[]).push([[39],{1082:function(t,n,e){"use strict";e.r(n);var o=e(22),r=Object(o.a)({},function(){var t=this,n=t.$createElement,e=t._self._c||n;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("p",[t._v("Code分享\n變數命名\n單複數\nPeople, Person\nforeach( var people in person )")]),t._v(" "),e("pre",[e("code",[t._v("\tboolean變數 isAble\n\tjquery變數 $aaa\n\t計算出boolean值 CanDoSomething\n\n責任鍊\n\t回傳ProcessResult\n\t\n\tProcessHandler.Run\n\n\tProcessResult\n\t\tErrorCode\n\t\t\tSystemCode\n\t\t\tSystemMessage\n\t\t\tClientCode\n\t\t\tClientMessage\n\t\tIsSuccess\n\t\tPayload: BasePayload, IPayload\n\t\tNextAction\n\t\t\t\n\nInterface payload技巧\n實作某個Interface，到instance再轉型成自己想要的物件\n\nif else盡量不要巢狀\n\tEX\n\t\tint statusCode = 200;\n\t\tif(NullOrempty){\n\t\t\tstatusCode = 400;\n\t\t}else{\n\t\t\tif(){}\n\t\t\telse(){}\n\t\t}\n\t\treturn statusCode;\n\t\t============================\n\t\t// 獨立成function\n\t\tpublic int GetStatusCode(){\n\t\t\tif(NullOrempty){\n\t\t\t\treturn 400;\n\t\t\t}\n\n\t\t\tif(){\n\t\t\t\treturn ...\n\t\t\t}\n\n\t\t\treturn 200;\n\t\t}\n\nswitch + enum\n\t將情形明確條列\n\t有default提醒預設行為\n\t在看case的時候也有enum可以看到全部的情況，比一堆if else if好\n\t可讀性比較高\n\t擴充性比較好\n\nMVC\n\t權責分離\n\t\tEx SmsOtp分別存變數到Session中，改存DataModel到Session中\n\nData Driven, Event Prevent\n\nconstructor塞值\n\t最好在property前面加上this\n\tAAA(string bbb){\n\t\tthis.Bbb = bbb;\n\t}\n\n變數rename的技巧\n\t在不依靠reference rename的情況下\n\t什麼時候可以直接replace all\n\t基本思路\n\t\t只要replace後的名稱，目前沒人用，就可以replace all\n\nfunction更新後之向下兼容機制\n\t1. 嚴謹的更改邏輯，讓既有之input output不受影響，但又能應對新邏輯\n\t2. 增加參數後，帶好default值\n\t3. 開新的function\n\n\n例外處理\n\tDesign By Contract\n\n\t根本原因\n\t\tRoot Cause\n\n\tＲobustness\n\n\n\tfault\n\t\tdesign fault\n\t\tcomponent fault\n\t\t可能導致error\n\terror\n\t\t可能會導致failure\n\tfailure\n\t\t可能會導致服務偏離規格\n\n\n\t錯誤的發生來源\n\t\t源自別人\n\t\t源自自己\n\n\tfault-tolerant\n\t\t高容錯\n\t\t可以靠備援來做到\n\t\t\t但是成本不同\n\n\tsynchronous exception\n\n\tasynchronous exception\n\t\t像是機器記憶體不足\n\t\t通常非同步exception都很大條\n\n\n\n\ttry\n\t\t執行有可能exception的邏輯\n\t\tlog例外訊息\n\tcatch\n\t\t例外處理\n\t\t\t嘗試錯誤修復\n\t\t將對外訊息整理得更具可讀性\n\t\tlog例外訊息\n\tfinally\n\t\t執行一些callback\n\t\t像是關掉connection\n\t\tresource釋放\n\t\t狀態回復\n\t\t以及情境允許，回傳一個default值\n\n\ttry\n\t\timplement requirements(can have alternatives)\n\t\tprepare state recovery (ex make a check point)\n\t\treport exceptional conditions\n\tcatch\n\t\tperform error and fault handling\n\t\treport exceptional conditions\n\t\tcontrol retry flow\n\tfinally\n\t\trelease resources\n\t\tdrop check points if any\n\n\t不要每個try catch都log\n\t\t在最上層寫個大的try catch，那邊log就好\n\t\t不然同樣的exception會到處log\n\n\terror handling\n\t\tBackward recovery\n\t\t\tState-based\n\t\t\t\t製作映像檔\n\t\t\tOperation-based\n\t\t\t\tUndo\n\n\t行為回復的實作策略\n\t\tfault handling\n\t\t\t診斷 diagnosis\n\t\t\t隔離 isolation\n\t\t\t重新組態 reconfiguration\n\t\t\t重新初始化 reinitialization\n\n\t\tRetry\n\t\t\t設計多樣性( design diversity )\n\t\t\t功能多樣性( functional diversity )\n\t\t\t\t像是不同的登入方式\n\t\t\t\t\tFB登入、Google登入\n\t\t\t資料多樣性( data diversity )\n\t\t\t\t像是exception後給default data\n\t\t\t時序多樣性( temporal diversity )\n\t\t\t\t隔一段時間再retry，像是網路瞬斷\n\n\t很多是不可預期的exception\n\t無法靠事先if else去做檢查\n\n\t什麼是好的軟體？\n\t\t好不好加功能\n\t\t調整跟scope有關跟時間比較無關\n")])]),t._v(" "),e("p",[t._v("Progressive Design 漸進式開發\n先做出最小可提供服務之系統，確認系統價值\n再決定後續如何精進")]),t._v(" "),e("pre",[e("code",[t._v("而一開始開發時留好精進空間，避免後續被技術債壓垮\n")])])])},[],!1,null,null,null);n.default=r.exports}}]);